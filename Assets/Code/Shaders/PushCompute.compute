#pragma kernel PushKernel
//https://toqoz.fyi/thousands-of-meshes.html
struct MeshProperties {
    float4x4 mat;
    float4 color;
};





///This should conflict with john's change
RWStructuredBuffer<MeshProperties> _Properties;


//spacing for no reason
float3 _PusherPosition;
float3 _PusherPosition2;

float pushRange;

[numthreads(64,1,1)]
void PushKernel (uint3 id : SV_DispatchThreadID) {
    float4x4 mat = _Properties[id.x].mat;

    //in the transform, the position is the last column
    float3 position = float3(mat[0][3], mat[1][3], mat[2][3]);

    float dist = distance(position, _PusherPosition);


    dist = pushRange - clamp(0.0, pushRange, dist);

    float3 push = normalize(position - _PusherPosition) * dist;


    float4x4 translation = float4x4(
        1, 0, 0, push.x,
        0, 1, 0, push.y,
        0, 0, 1, push.z,
        0, 0, 0, 1
    );

    //Apply translation to the existing matrix, which will be read in the shader
    _Properties[id.x].mat = mul(translation,mat);
}